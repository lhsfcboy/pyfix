FIX协议的基本格式是一串 key=value
其中key的部分一定是正整数，通常不大于9999，不允许左侧填充0, 可以用如下正则表达式 ^[1-9]\d*$
value的部分是任意字符，可能有空格，甚至为空，通常不包含=的部分
总是以8=开头， 以10=\d\d\d结束
前面三个栏位总是8/9/35
栏位8的值通常是FIX.4.2 或 FIX.4.4
栏位9的值是 Message length, in bytes, forward to the CheckSum <10> field.
栏位35标记了本条消息的类型，同类型的消息其栏位构成基本一致

通常FIX Log有分隔符存在，例如：
8=FIX.4.4|9=61|35=A|34=1|49=SenderCompID|52=20220219-10:14:33.123|56=TargetCompID|98=0|108=30|10=177
我们可以轻易的分隔开每个栏位
8=FIX.4.4
9=61
......

如果没有分隔符，该如何处理呢？
8=FIX.4.49=6135=A34=149=SenderCompID52=20220219-10:14:33.12356=TargetCompID98=0108=3010=177

例如第一个栏位的开始是8=，  但是结束在8=FIX.4.4 还是8=FIX.4.呢？
换言之其后的栏位可能是9= 或者49=

这个任务似乎近似于词法分析器的实现

尝试过的GPT提示词，效果很差，没有理解到需求

有一段FIXLog如下：“8=FIX.4.49=6135=A34=149=SenderCompID52=20220219-10:14:33.12356=TargetCompID98=0108=3010=177”
- 注意到tag之间没有分隔字符
- 请用Python把他们处理为字典
- 每个字段的长度是不固定的
- 再次特别注意字段之间没有分隔符


